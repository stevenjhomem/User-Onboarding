{"ast":null,"code":"var _jsxFileName = \"/Users/stevenhomem/Code/lambda-school/week_7/useronboarding/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [formValues, setFormValues] = useState({\n    user: '',\n    contactInfo: '',\n    password: '',\n    doesAgree: false\n  });\n  const [errors, setErrors] = useState({\n    user: '',\n    contactInfo: '',\n    password: '',\n    doesAgree: ''\n  });\n  const [disabled, setDisabled] = useState(true);\n\n  const change = event => {\n    const {\n      checked,\n      name,\n      value,\n      type\n    } = event.target;\n    const valueToUse = type === 'checkbox' ? checked : value;\n    setFormErrors(name, value);\n    setFormValues({ ...formValues,\n      [name]: valueToUse\n    });\n  };\n\n  const schema = yup.object().shape({\n    user: yup.string().required('You must enter your first and last name to submit this form.').min(6, 'Name must be more than 6 characters'),\n    contactInfo: yup.string().required('You must enter a valid email address to submit this form.'),\n    password: yup.string().required('You need a password to protect your data'),\n    doesAgree: yup.boolean().oneOf([true], 'You must agree to our terms of service to submit this form')\n  });\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => setDisabled(!valid));\n  }, [formValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter your name here:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: change,\n          type: \"text\",\n          name: \"user\",\n          value: formValues.user,\n          placeholder: \"First and Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter your email address here:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: change,\n          type: \"text\",\n          name: \"contactInfo\",\n          value: formValues.contactInfo,\n          placeholder: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Type in your password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: change,\n          type: \"password\",\n          name: \"password\",\n          value: formValues.password,\n          placeholder: \"Make it strong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Check This Box to Agree to Our Terms of Service:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: change,\n          name: \"doesAgree\",\n          checked: formValues.doesAgree,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: disabled,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"AUfjTU3DQh4oP0yTTgfRXdF2qw0=\");\n\n_c = Form;\n;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/stevenhomem/Code/lambda-school/week_7/useronboarding/src/Form.js"],"names":["React","useState","useEffect","yup","Form","formValues","setFormValues","user","contactInfo","password","doesAgree","errors","setErrors","disabled","setDisabled","change","event","checked","name","value","type","target","valueToUse","setFormErrors","schema","object","shape","string","required","min","boolean","oneOf","isValid","then","valid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport './App.css';\n\nfunction Form() {\n\n    const [formValues, setFormValues ] = useState({\n        user : '',\n        contactInfo : '',\n        password : '',\n        doesAgree : false,\n    });\n\n    const [ errors, setErrors ] = useState({\n        user : '',\n        contactInfo : '',\n        password : '',\n        doesAgree : '',\n    });\n\n    const [disabled, setDisabled] = useState(true);\n\n    const change = event => {\n        const { checked, name, value, type } = event.target;\n        const valueToUse = type === 'checkbox' ? checked : value;\n        setFormErrors(name, value)\n        setFormValues({...formValues, [name]: valueToUse})\n    };\n\n    const schema = yup.object().shape({\n        user : yup.string().required('You must enter your first and last name to submit this form.').min(6, 'Name must be more than 6 characters'),\n        contactInfo : yup.string().required('You must enter a valid email address to submit this form.'),\n        password : yup.string().required('You need a password to protect your data'),\n        doesAgree : yup.boolean().oneOf([true], 'You must agree to our terms of service to submit this form'),\n    });\n\n    useEffect(() => {\n        schema.isValid(formValues).then(valid => setDisabled(!valid))\n    }, [formValues]);\n\n    return (\n        <div className = 'formContainer'>\n            <form>\n                <label>\n                    Enter your name here:\n                    <input \n                        onChange = {change}\n                        type = 'text'\n                        name = 'user'\n                        value = {formValues.user}\n                        placeholder = 'First and Last Name'>\n                    </input>\n                </label>\n                <label>\n                    Enter your email address here:\n                    <input\n                        onChange = {change}\n                        type = 'text'\n                        name = 'contactInfo'\n                        value = {formValues.contactInfo}\n                        placeholder = 'Email Address'>\n                    </input>\n                </label>\n                <label>\n                    Type in your password:\n                    <input\n                        onChange = {change}\n                        type = 'password'\n                        name = 'password'\n                        value = {formValues.password}\n                        placeholder= 'Make it strong'>\n                    </input>\n                </label>\n                <label>\n                    Check This Box to Agree to Our Terms of Service:\n                    <input\n                        onChange = {change}\n                        name = 'doesAgree'\n                        checked = {formValues.doesAgree}\n                        type = 'checkbox'>\n                    </input>\n                </label>\n                <label>\n                    <button disabled = {disabled}>Submit</button>\n                </label>\n\n            </form>\n         </div>\n    )\n\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}